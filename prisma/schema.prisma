generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// model Post {
//   id         Int     @id @default(autoincrement())
//   titre      String
//   slug       String  @unique
//   contenu    String?
//   type_id    Int
//   type       TypeRegle    @relation("Type", fields: [type_id], references: [id])
//   chapitreId Int?
//   chapitre   Post?   @relation("ChapitreArticle", fields: [chapitreId], references: [id])
//   articles   Post[]  @relation("ChapitreArticle")

//   @@map("posts")
// }

// model TypeRegle {
//   id    Int    @id @default(autoincrement())
//   name  String
//   posts Post[] @relation("Type")

//   @@map("type_regles")
// }

model Category {
  id                 Int                @id @default(autoincrement()) @map("category_id")
  name               String?            
  post_in_categories PostInCategories[]

  @@map("categories")
}

model PostInCategories {
  post_id     Int
  category_id Int
  categories  Category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  posts       Post     @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([post_id, category_id], map: "post_id_category_id_unique")
  @@map("post_in_categories")
}

model Post {
  id                 Int                @id @default(autoincrement()) @map("post_id")
  created_at         DateTime?          @default(now())
  title              String             
  content            String?
  author_id          Int?
  users              User?              @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  post_in_categories PostInCategories[]

  @@map("posts")
}

model Profile {
  id      Int     @id @default(autoincrement()) @map("profile_id")
  contact     String?
  adresse     String?
  user_id Int     @unique
  users   User    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("profiles")
}

model User {
  id       Int      @id @default(autoincrement()) @map("user_id")
  name     String?  
  email    String   @unique
  posts    Post[]
  profiles Profile?

  @@map("users")
}